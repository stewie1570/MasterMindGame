@{
    ViewBag.Title = "Master Mind";
}

@Scripts.Render("~/bundles/mastermindprototype")

<div class="game-container">
    <div data-bind="visible: !isSetup()">
        <table>
            <tr>
                <th>Guess Width</th>
                <td><input type="number" data-bind="value: guessWidth" /></td>
            </tr>
            <tr>
                <th>Max Attempts</th>
                <td><input type="number" data-bind="value: maxAttempts" /></td>
            </tr>
            <tr>
                <td colspan="2" align="right">
                    <button data-bind="click: setupGame">Start Game</button>
                </td>
            </tr>
        </table>
    </div>

    <div class="result-outer-container" data-bind="visible: isSetup()">
        <div data-bind="foreach: serverVm().Results">
            <!-- ko foreach: Guess -->
            <div data-bind="style: {backgroundColor: constants.guessColors[$data]}" class="guess-peg">
            </div>
            <!-- /ko -->

            <!-- ko foreach: Result -->
            <div data-bind="style: {backgroundColor: constants.resultColors[$data]}" class="result-peg">
            </div>
            <!-- /ko -->

            <div class="clear"></div>
        </div>
    </div>

    <div class="guess-outer-container" data-bind="visible: isSetup() && !serverVm().IsOver">
        <div class="guess-inner-container">
            <span data-bind="visible: currentGuess().length == 0">[Click Pegs Below to Guess]</span>

            <!-- ko foreach: currentGuess -->
            <div data-bind="style: {backgroundColor: $data}" class="guess-peg">
            </div>
            <!-- /ko -->

            <button data-bind="click: sendGuess, visible: currentGuess().length == guessWidth()" class="command float-right"><b>Send</b></button>
            <div class="clear"></div>
        </div>

        <div class="clear"></div>

        <div>
            <!-- ko foreach: constants.guessColors -->
            <div data-bind="style: {backgroundColor: $data}, click: $parent.pegAction" class="guess-peg command">
            </div>
            <!-- /ko -->

            <button data-bind="click: pegAction" class="command float-right">Backspace</button>
        </div>

        <div class="clear"></div>
    </div>

    <h2 data-bind="visible: serverVm().IsOver && serverVm().IsAWin">You Win</h2>
    <h2 data-bind="visible: serverVm().IsOver && !serverVm().IsAWin">You Lost</h2>

    <br />

    <div class="align-center">
        <button data-bind="click: reset, visible: isSetup()" class="command">New Game</button>
    </div>
</div>